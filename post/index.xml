<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | about: @sshock_tetris</title><link>https://sshock-tetris.github.io/post/</link><atom:link href="https://sshock-tetris.github.io/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>ja</language><lastBuildDate>Fri, 11 Mar 2022 00:00:00 +0900</lastBuildDate><image><url>https://sshock-tetris.github.io/media/icon_hu37c0710e4653aca6f4ac7ce1d2e100be_10603_512x512_fill_lanczos_center_3.png</url><title>Posts</title><link>https://sshock-tetris.github.io/post/</link></image><item><title>雑記(2022/03/11)</title><link>https://sshock-tetris.github.io/post/20220311/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0900</pubDate><guid>https://sshock-tetris.github.io/post/20220311/</guid><description>&lt;p>何でゲーム配信者になったんだろうか？と思うことが何度もある。
自分はゲーマーじゃない。ゲームをやってて楽しいという雰囲気を出すのも得意じゃない。
声を出せる時間があまりなく配信できる時間が限られる。メインでやってるテトリスの腕前も中途半端。おまけに場をつなぐフリートークも苦手。
そんな配信をしたところで、そんな配信の姿勢で、来てくれたリスナーたちに楽しい時間を届けられるのか。初見さんが定着してくれるのか。
配信しようと思っても常に不安でいっぱいになり、ここ最近は配信ペースががた落ちしている。これが配信しない日が増えてきた理由である。
たとえ仕事が忙しくても、配信したいと思う心が勝つ状態になっていることがベストだが、自分はそうなっていない。
配信者としての資質が欠けている気がしてならない。そんな人が何も気にせず、何のしがらみもなく呑気に配信していて良いものなのか。
自分が何のために配信しているのかわからなくなった。&lt;/p>
&lt;p>そんな暗い話はさておき、実際に配信して気づいたことがある。&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;br>
チャンネル登録を増やす上で、自分の特徴をよく知っておくことは重要なことの１つだと思う。
強みは？弱みは？それらを正確に知っているだけでも大きなアドバンテージがある。
強みを最大限に発揮することをやっていけば配信が面白くなってくるし、
弱みを正確に知っていれば弱みを避けることでモチベーション低下を最小限に抑えられる場合もある。
しかし、自分はまだ正確なことがわかっていない。&lt;/p>
&lt;p>自分の配信に疑問を持ちながらも、やってよかったなと思うことはある。&lt;br>
22時部屋(#room009900)を配信すれば途中参加できる人が増えて利便性が上がる、
という理由だけで声なしで配信を始めてから、テトリスをよくやる配信者さんとリスナーさんに恵まれた。
&lt;a href="https://sshock-tetris.github.io/project/tetlive/">テトライブ&lt;/a>なんていうユニット(?)ができ、その一員にまでなっていた。
それはかけがえのないもので、配信していなければ実現できなかったことである。
同時に、配信者としての道からもう後が引けなくなった。こんな恵まれた環境を手放すわけにはいかない。&lt;/p>
&lt;p>どこかの配信の常連の人で、もし配信をほんの少しでもやってみたいと思うようであれば、試してみると良い。
どんな配信をするのか気になる、という人が１人ぐらいはいると思う。
どういう結果になるかは、やってみなければわからない。思い切り飛び込むことも時には大事だということは、いい教訓になるのではないか。
こんな配信モチベーションが最低な人が言っても説得力はないのかもしれないが。&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>当然、これは個人的な意見であり、正解だとは思っていないことを念頭に置いてほしい。&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>TETRIS 99マージンタイマー自動開始装置の導入方法</title><link>https://sshock-tetris.github.io/post/howto_use_timer_auto_starter/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0900</pubDate><guid>https://sshock-tetris.github.io/post/howto_use_timer_auto_starter/</guid><description>&lt;p>この記事は、&lt;a href="https://sshock-tetris.github.io/project/timer-auto-starter/">TETRIS 99マージンタイマー自動開始装置&lt;/a>の取り扱い説明書です。
&lt;a href="https://github.com/sshock-tetris/autoStartMarginTimer/blob/main/docs/%E3%82%BF%E3%82%A4%E3%83%9E%E3%83%BC%E8%87%AA%E5%8B%95%E9%96%8B%E5%A7%8B%E8%A3%85%E7%BD%AE_%E4%BD%BF%E3%81%84%E6%96%B9.txt" target="_blank" rel="noopener">テキスト&lt;/a>
と同じ内容ですが、それには画像がないため、このページでは画像付きで説明します。&lt;/p>
&lt;hr>
&lt;details class="toc-inpage d-print-none d-xl-none " open>
&lt;summary class="font-weight-bold">目次&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#動作要件">動作要件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#導入手順">導入手順&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#tetris-99用マージンタイマーの導入">TETRIS 99用マージンタイマーの導入&lt;/a>&lt;/li>
&lt;li>&lt;a href="#自動開始装置の準備">自動開始装置の準備&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#自動開始装置の操作方法">自動開始装置の操作方法&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#状態">状態&lt;/a>&lt;/li>
&lt;li>&lt;a href="#obsを探すボタン">&lt;code>OBSを探す&lt;/code>ボタン&lt;/a>&lt;/li>
&lt;li>&lt;a href="#タイマー手動スタートボタン">&lt;code>タイマー手動スタート&lt;/code>ボタン&lt;/a>&lt;/li>
&lt;li>&lt;a href="#状態をリセット">&lt;code>状態をリセット&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#エラーメッセージ">エラーメッセージ&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#obsを探すを押したとき">&lt;code>OBSを探す&lt;/code>を押したとき&lt;/a>&lt;/li>
&lt;li>&lt;a href="#タイマー手動スタートを押したとき">&lt;code>タイマー手動スタート&lt;/code>を押したとき&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#q-amp-a">Q &amp;amp; A&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#ゲームが始まっても状態が準備完了待機中から進みません">ゲームが始まっても状態が&amp;quot;準備完了。待機中&amp;hellip;&amp;ldquo;から進みません。&lt;/a>&lt;/li>
&lt;li>&lt;a href="#想定外のところでタイマーが動いてしまいます">想定外のところでタイマーが動いてしまいます。&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ウィンドウ-プロジェクター-ソースウィンドウや対話ウィンドウを閉じてしまった場合はどうする">&lt;code>ウィンドウ プロジェクター (ソース)&lt;/code>ウィンドウや対話ウィンドウを閉じてしまった場合はどうする？&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ゲームの音は場面認識に関係ありますか">ゲームの音は場面認識に関係ありますか？&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ホーム画面に戻っても大丈夫">ホーム画面に戻っても大丈夫？&lt;/a>&lt;/li>
&lt;li>&lt;a href="#対応しているモードは">対応しているモードは？&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#サポート">サポート&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="動作要件">動作要件&lt;/h2>
&lt;ul>
&lt;li>Windowsを搭載した配信用パソコン&lt;/li>
&lt;li>HDMIキャプチャボード&lt;br>
※カメラなどでNintendo Switchの画面を直撮りしている映像には対応しません&lt;/li>
&lt;li>OBS (配信用ソフトウェア)&lt;br>
※表示言語を日本語にしてください。他の言語では動作しません&lt;br>
※他の配信用ソフトウェア (Streamlabs OBS、XSplitなど) は対応していません&lt;/li>
&lt;/ul>
&lt;h2 id="導入手順">導入手順&lt;/h2>
&lt;h3 id="tetris-99用マージンタイマーの導入">TETRIS 99用マージンタイマーの導入&lt;/h3>
&lt;p>※&lt;a href="https://github.com/sshock-tetris/Tetris99MarginTimer/" target="_blank" rel="noopener">マージンタイマー&lt;/a>を既に導入済の場合は、
マージンタイマーのソース名を&lt;mark>MarginTimer&lt;/mark>に変更してから&lt;a href="#%e8%87%aa%e5%8b%95%e9%96%8b%e5%a7%8b%e8%a3%85%e7%bd%ae%e3%81%ae%e6%ba%96%e5%82%99">自動開始装置の準備&lt;/a>へ進んでください&lt;/p>
&lt;h4 id="1-マージンタイマーのダウンロード">1. マージンタイマーのダウンロード&lt;/h4>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://sshock-tetris.github.io/images/save_as_timer.png" alt="Rawのコンテキストメニュー" loading="lazy" data-zoomable width="600px" />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>&lt;a href="https://github.com/sshock-tetris/Tetris99MarginTimer/blob/master/timer.html" target="_blank" rel="noopener">https://github.com/sshock-tetris/Tetris99MarginTimer/blob/master/timer.html&lt;/a> にアクセスする。
&lt;code>Raw&lt;/code>を右クリックし、名前を付けて保存を選び、&lt;code>timer.html&lt;/code>を適当な場所に保存する。&lt;/p>
&lt;h4 id="2-obsにタイマーを追加">2. OBSにタイマーを追加&lt;/h4>
&lt;img src="https://sshock-tetris.github.io/images/add_browser.png" alt="OBS - ソースの追加 - ブラウザ">
OBSを起動し、ブラウザソースを追加する。
&lt;img src="https://sshock-tetris.github.io/images/new_margintimer.png" alt="ソースを作成/選択画面">
&lt;p>タイマーの名称を &lt;mark>MarginTimer&lt;/mark> にして、OKをクリックする。&lt;mark>(⚠スペル要注意)&lt;/mark>&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/timer_property_initial.png" alt="'MarginTimer' のプロパティ画面">
&lt;p>&lt;code>'MarginTimer' のプロパティ&lt;/code>が表示される。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/timer_property_example2.png" alt="ローカルファイルチェックボックスと各種設定">
&lt;p>&lt;code>ローカルファイル&lt;/code>にチェックを入れ、ローカルファイルの場所をソースのアドレスに保存した&lt;code>timer.html&lt;/code>にする。
幅は600以上を推奨。高さは60あれば十分。変更後、OKをクリックする。&lt;/p>
&lt;h4 id="3-タイマーの動作確認">3. タイマーの動作確認&lt;/h4>
&lt;img src="https://sshock-tetris.github.io/images/margintimer_menu.png" alt="OBS - ブラウザソース - コンテキストメニュー">
&lt;p>追加したブラウザソースを右クリックし、[対話]メニューを選択すると&lt;code>'MarginTimer' の相互作用&lt;/code>ウィンドウが表示される。
このウィンドウがアクティブ状態の時にキー操作を行うとタイマーが動作する。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/interactive_window.png" alt="'MarginTimer' との相互作用ウィンドウ">
&lt;div class="alert alert-note">
&lt;div>
&lt;h3 id="キー操作一覧">キー操作一覧&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>キー&lt;/th>
&lt;th>動作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Enter&lt;/td>
&lt;td>タイマー開始&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Space&lt;/td>
&lt;td>タイマー停止・再開 (*1)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ESC&lt;/td>
&lt;td>タイマー消去&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>2秒後にタイマー開始 (*2)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>3秒後にタイマー開始 (*2)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>4秒後にタイマー開始 (*2)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>(*1) タイマーを再開できるのはタイマーを停止したときのみです。タイマーを消去した後は再開できません。&lt;br>
(*2) キーはゲーム開始時のカウントダウンの数値に合わせています。&amp;ldquo;Go&amp;quot;が表示される1秒間があるため、実際の待ち時間ではありません。
&lt;/div>
&lt;/div>
&lt;p>自動開始装置は、この対話ウィンドウに擬似的にキー入力をさせて、
タイマー開始とタイマーリセット&amp;amp;消去を自動的に行うことで実現している。&lt;/p>
&lt;p>なお、マージンタイマーはマージンに到達すると色が変わり、最終的に赤くなるようにできている。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/timer_color.png" alt="マージンタイマーの時間経過と色一覧">
&lt;div class="alert alert-note">
&lt;div>
&lt;h3 id="マージンとは">マージンとは&lt;/h3>
&lt;p>試合の早期決着を目的に導入されているTETRIS 99固有のシステム。&lt;br>
試合開始から10分が経過すると、ライン消去時の相手に送るライン数から上乗せされるようになる。
30秒ごとに1ラインずつ上乗せされる。たとえば、10分なら+1ライン、11分なら+3ライン。&lt;br>
TETRIS 99ではせり上がり予告の最大ライン数が12ラインのため、15分が経過すると最大となる
(1ライン + 11ライン = 12ライン)。相手に送る場合に限定されるため、自陣のせり上がり予告との相殺にはマージンは適用されない。
&lt;/div>
&lt;/div>
&lt;p>タイマーの導入ができたら、自動開始装置の準備へ進もう。&lt;/p>
&lt;h3 id="自動開始装置の準備">自動開始装置の準備&lt;/h3>
&lt;h4 id="1-自動開始装置のダウンロード">1. 自動開始装置のダウンロード&lt;/h4>
&lt;img src="https://sshock-tetris.github.io/images/releases.png" alt="自動開始装置のReleasesページ">
&lt;p>&lt;a href="https://github.com/sshock-tetris/autoStartMarginTimer/releases" target="_blank" rel="noopener">https://github.com/sshock-tetris/autoStartMarginTimer/releases&lt;/a>
から、最新バージョンの自動開始装置のzipファイルをダウンロードする。&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
&lt;h4 id="ウェブブラウザ-google-chrome-を使用している場合">ウェブブラウザ Google Chrome を使用している場合&lt;/h4>
&lt;p>ダウンロードが終了した後、&lt;/p>
&lt;blockquote>
&lt;p>このファイルは一般的にダウンロードされているファイルではなく、危害を及ぼす可能性があります。&lt;/p>
&lt;/blockquote>
&lt;p>と表示される場合がある。
&lt;img src="https://sshock-tetris.github.io/images/dlmgr_bar.png" alt="ダウンロードバーでの警告表示">&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://sshock-tetris.github.io/images/dlmgr_warn.png" alt="ダウンロードマネージャーでの警告表示" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>この場合は、&lt;code>保存&lt;/code>を押して進めて欲しい。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/dlmgr_confirm.png" alt="ファイル保存時の確認メッセージ">
&lt;p>&lt;code>保存&lt;/code>を押したときに上図のような確認メッセージが表示されるが、かまわず&lt;code>続行する&lt;/code>を押す。
これは、ダウンロード数が少ないだけで疑われるというChromeのお節介な機能の1つである。&lt;/p>
&lt;p>上記URLは自動開始装置の正式な公開場所であり、そこからダウンロードしていれば問題ないはずである。
この圧縮ファイルは公開されたソースコードからGitHubの自動ビルド機能によってできたファイルであり、
危害を加える危険物が含まれないように考慮している。&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>ダウンロードしたファイルを右クリックして&lt;code>プロパティ&lt;/code>を選び、
下のセキュリティ項目の&lt;code>許可する&lt;/code>にチェックを入れてファイルのブロック解除を行う。
セキュリティ項目が表示されない場合はブロックが解除されているので、その場合は操作不要である。
&lt;img src="https://sshock-tetris.github.io/images/property.png" alt="自動開始装置ファイルのプロパティ画面">&lt;/p>
&lt;p>圧縮されているので、適当な場所に展開する。展開すると、次の3ファイルがある。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/extracted.png" alt="展開後のファイルリスト">
&lt;h4 id="2-obsの準備">2. OBSの準備&lt;/h4>
&lt;p>ソースに映像キャプチャデバイス(キャプチャボードの映像)がなければ追加する。&lt;/p>
&lt;p>&amp;lsquo;MarginTimer&amp;rsquo;ソースを右クリックし、&lt;code>対話&lt;/code>メニューを選択する。
&lt;img src="https://sshock-tetris.github.io/images/margintimer_menu.png" alt="OBS - ブラウザソース - コンテキストメニュー">&lt;/p>
&lt;p>キャプチャボードの映像ソースを右クリックして&lt;code>ウィンドウ プロジェクター (ソース)&lt;/code>メニューを選ぶ。
&lt;img src="https://sshock-tetris.github.io/images/window_projector_source.png" alt="OBS - 映像ソース - コンテキストメニュー">&lt;/p>
&lt;p>それぞれ、&lt;code>'MarginTimer' の相互作用&lt;/code>ウィンドウ、&lt;code>ウィンドウ プロジェクター (ソース) - 映像キャプチャデバイス&lt;/code>ウィンドウが表示されていることを確認する。&lt;/p>
&lt;h4 id="キャプチャ映像の上下左右に黒縁がある場合">キャプチャ映像の上下左右に黒縁がある場合&lt;/h4>
&lt;p>キャプチャ映像の上下左右が黒く額縁状態なっている場合、
そのままではマージンタイマー自動開始装置が場面をうまく認識できないことがある。
以下の要領で額縁状態を解消させる。&lt;/p>
&lt;ol>
&lt;li>キャプチャボードの映像ソースを右クリックして、&lt;code>フィルタ&lt;/code>を選ぶ。&lt;br>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://sshock-tetris.github.io/images/filter.png" alt="映像ソースのフィルタウィンドウ(初期状態)" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
映像ソースのフィルタウィンドウが表示される。&lt;/li>
&lt;li>ウィンドウ左下(エフェクトフィルタ)の&lt;code>+&lt;/code>ボタンをクリックし、&lt;code>クロップ/パッド&lt;/code>を追加する。&lt;br>
&lt;img src="https://sshock-tetris.github.io/images/crop_pad.png" alt="エフェクトフィルタ追加 - クロップ/パッド">&lt;/li>
&lt;li>フィルタの名前を付ける。
&lt;img src="https://sshock-tetris.github.io/images/crop_pad_name.png" alt="フィルタ名入力ダイアログボックス">&lt;/li>
&lt;li>追加した&lt;code>クロップ/パッド&lt;/code>フィルタをクリックし、黒縁が表示されなくなるまで上下左右の数値を増やす。
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://sshock-tetris.github.io/images/filter_crop.png" alt="映像ソースのフィルタウィンドウ(クロップ/パッド選択済)" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/li>
&lt;/ol>
&lt;h2 id="自動開始装置の操作方法">自動開始装置の操作方法&lt;/h2>
&lt;p>マージンタイマー自動開始装置 (autoStartMarginTimer.exe)を起動する。
起動すると、以下のようなウィンドウが表示される。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/autostartmargintimer_init.png" alt="起動直後の自動開始装置ウィンドウ">
&lt;h3 id="状態">状態&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>状態&lt;/th>
&lt;th>説明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>[自動開始できません]&lt;/td>
&lt;td>まだ準備ができておらず、タイマーを自動開始できない。&lt;br>自動開始装置を起動した時、および状態をリセットした時はこの状態となる。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>準備完了。待機中&amp;hellip;&lt;/td>
&lt;td>ゲームが始まるのを待っている。タイマーを自動開始できる状態。&lt;br>タイマーが表示中の場合は、この状態になった時にタイマーを自動的に消去する。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>マッチング/ゲーム開始準備中&lt;/td>
&lt;td>マッチング中、またはゲーム開始準備中を認識した。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>READY&lt;/td>
&lt;td>マッチングが終わりREADYを認識した。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GO&lt;/td>
&lt;td>試合が始まり、タイマーを開始した。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-note">
&lt;div>
&lt;h3 id="obsを管理者権限で起動している場合">OBSを管理者権限で起動している場合&lt;/h3>
&lt;p>マージンタイマー自動開始装置も管理者権限で実行する。&lt;/p>
&lt;p>Windowsの仕様の問題で、管理者権限でなければOBSが起動していることを認識できない。&lt;/p>
&lt;/div>
&lt;/div>
&lt;h3 id="obsを探すボタン">&lt;code>OBSを探す&lt;/code>ボタン&lt;/h3>
&lt;p>このボタンをクリックすると、自動開始装置がOBSの&lt;code>ウィンドウ プロジェクター (ソース)&lt;/code>ウィンドウと
&lt;code>'MarginTimer' の相互作用&lt;/code>ウィンドウを探し、2つのウィンドウが見つかり次第場面認識を開始する。&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
&lt;code>ウィンドウ プロジェクター (ソース)&lt;/code>ウィンドウのウィンドウサイズが大きくなり、
最大化ボタンと最小化ボタンが消えるが、これは正常動作である。
&lt;/div>
&lt;/div>
&lt;p>準備ができていない場合は、このようなエラーメッセージが表示される。
&lt;img src="https://sshock-tetris.github.io/images/error_obs_not_detected.png" alt="OBS検出エラーメッセージ">&lt;/p>
&lt;p>準備ができていれば、このボタンが無効化され、自動的に画像認識により場面を認識するようになる。
場面に応じてタイマーを開始したり消去したりするので、うまく認識できていれば以後操作は不要である。&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
&lt;h3 id="ウィンドウ-プロジェクター-ソースウィンドウの注意事項">&lt;code>ウィンドウ プロジェクター (ソース)&lt;/code>ウィンドウの注意事項&lt;/h3>
&lt;ol>
&lt;li>ウィンドウを画面外に移動してはならない。&lt;br>
画面外に移動すると映像が更新されず、正常に認識できなくなる。
ただし、ウィンドウが背面になっている場合は問題ない。&lt;/li>
&lt;li>コンテキストメニュー(ウィンドウを右クリックした時に表示されるメニュー)のうち、
&lt;code>ウィンドウをコンテンツに合わせる&lt;/code>を選択してはならない。&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;h3 id="タイマー手動スタートボタン">&lt;code>タイマー手動スタート&lt;/code>ボタン&lt;/h3>
&lt;p>OBSとの連携ができている状態でこのボタンを押すと、タイマーを手動で開始することができる。
これはタイマーが自動的に開始しないなどのトラブルが発生してタイマーを手動で開始する必要がある場合や
動作テストのためのボタンで、通常は使用する必要はない。&lt;/p>
&lt;h3 id="状態をリセット">&lt;code>状態をリセット&lt;/code>&lt;/h3>
&lt;p>試合が始まったのに場面を認識できずにタイマーが始まらない、マッチング中の画面を正しく認識できない
などの症状を見かけた時は、マージンタイマー自動開始装置の状態のリセットを試してほしい。&lt;/p>
&lt;img src="https://sshock-tetris.github.io/images/reset.png" alt="自動開始装置のリセット">
&lt;p>タイトルバーを右クリックすると、&lt;code>状態をリセット&lt;/code>メニューがあるので、それを選択する。
マージンタイマー自動開始装置の状態に関係なく起動直後の状態に戻る。&lt;/p>
&lt;p>「状態をリセット」の状態とは自動開始装置のことを指し、マージンタイマーのことではない。
つまり、「状態をリセット」を行っても、表示されているマージンタイマーはそのまま表示されたままとなることに注意する。
マージンタイマーの表示を消したい場合は、&lt;code>'MarginTimer' の相互作用&lt;/code>ウィンドウをアクティブ状態にして、ESCキーを押す。&lt;/p>
&lt;h2 id="エラーメッセージ">エラーメッセージ&lt;/h2>
&lt;h3 id="obsを探すを押したとき">&lt;code>OBSを探す&lt;/code>を押したとき&lt;/h3>
&lt;img src="https://sshock-tetris.github.io/images/error_obs_not_detected.png" alt="OBS検出エラーメッセージ">
&lt;p>自動開始装置に必要なOBSの準備ができていない。特に、以下の点をよく確認する。&lt;/p>
&lt;ul>
&lt;li>ソースのウィンドウ プロジェクターを表示しているか？&lt;/li>
&lt;li>&lt;mark>MarginTimer&lt;/mark>のスペルが間違っていないか？&lt;/li>
&lt;li>OBSの表示言語が日本語になっているか？&lt;/li>
&lt;li>OBSが管理者権限で動作している場合、自動開始装置も管理者権限で動いているか？&lt;/li>
&lt;/ul>
&lt;h3 id="タイマー手動スタートを押したとき">&lt;code>タイマー手動スタート&lt;/code>を押したとき&lt;/h3>
&lt;img src="https://sshock-tetris.github.io/images/error_cant_send.png" alt="対話ウィンドウ未検出エラーメッセージ">
&lt;p>先にOBSの準備をする。&lt;br>
※タイマー手動スタートボタンは、現在OBSの準備ができるまでは無効化されているので、
このメッセージを見ることはまずないだろう。旧バージョンの時の名残である。&lt;/p>
&lt;h2 id="q-amp-a">Q &amp;amp; A&lt;/h2>
&lt;h3 id="ゲームが始まっても状態が準備完了待機中から進みません">ゲームが始まっても状態が&amp;quot;準備完了。待機中&amp;hellip;&amp;ldquo;から進みません。&lt;/h3>
&lt;p>以下、ご確認ください。&lt;/p>
&lt;ol>
&lt;li>正しいウィンドウ プロジェクターを表示していますか？&lt;br>
オーバーレイが含まれた映像など、ゲーム映像でない場合は認識できません。&lt;/li>
&lt;li>ゲーム映像の色が反転、もしくはグレースケールになっていませんか？&lt;br>
Switchの設定で色設定を変更している場合は認識できません。元の設定に戻してください。&lt;/li>
&lt;li>キャプチャボードの映像の上下左右に黒縁がありませんか？&lt;br>
額縁状態に縮小されている場合は額縁状態を解消するよう調整してください。&lt;/li>
&lt;li>OBSを探す時に、何らかの問題でウィンドウプロジェクターのウィンドウサイズが変化しなかった場合も同様に場面の認識ができません。
この現象が発生した場合は、作者までご連絡ください。&lt;/li>
&lt;li>ウィンドウ プロジェクター ウィンドウを画面外に移動していないか確認してください。&lt;/li>
&lt;/ol>
&lt;h3 id="想定外のところでタイマーが動いてしまいます">想定外のところでタイマーが動いてしまいます。&lt;/h3>
&lt;p>TETRIS 99のゲーム画面が表示されていることが前提条件となるため、Switchのアルバムから静止画や動画を再生した場合は、
実際のゲーム画面と区別がつかずタイマーが誤動作することがあります。
誤動作した場合は、タイマー状態のリセットを試してください。&lt;/p>
&lt;h3 id="ウィンドウ-プロジェクター-ソースウィンドウや対話ウィンドウを閉じてしまった場合はどうする">&lt;code>ウィンドウ プロジェクター (ソース)&lt;/code>ウィンドウや対話ウィンドウを閉じてしまった場合はどうする？&lt;/h3>
&lt;p>ウィンドウを閉じたことを自動開始装置が検知し、状態が&lt;code>[自動開始できません]&lt;/code>になります。
この時、無効化されていた&lt;code>OBSを探す&lt;/code>ボタンが再び有効になります。
ウィンドウプロジェクター ウィンドウや対話ウィンドウをもう一度開いて、&lt;code>OBSを探す&lt;/code>ボタンを押してください。&lt;/p>
&lt;h3 id="ゲームの音は場面認識に関係ありますか">ゲームの音は場面認識に関係ありますか？&lt;/h3>
&lt;p>無関係です。映像さえあれば無音でも問題なく使用できます。&lt;/p>
&lt;h3 id="ホーム画面に戻っても大丈夫">ホーム画面に戻っても大丈夫？&lt;/h3>
&lt;p>まだ部屋に入っていなければ問題ありません。
部屋に入ってから試合が始まるまでの間は、誤作動の原因となるため、できる限り避けてください。&lt;/p>
&lt;p>マージンタイマー自動開始装置は「マッチング中」または「ゲーム開始準備中」の表示部分を色で判断する仕様です。
そのため、それらの表示中にホーム画面に戻ると、マージンタイマー自動開始装置はマッチングが終わり試合が開始していると誤認識します。
また、部屋に入った直後にホーム画面に戻り、その間に試合が始まっていた場合も、同様の理由でマージンタイマーは動作しません。&lt;/p>
&lt;h3 id="対応しているモードは">対応しているモードは？&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>モード&lt;/th>
&lt;th>対応&lt;/th>
&lt;th>備考&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>TETRIS 99&lt;/td>
&lt;td>○&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TETRIS 99 VIP (Invictus)&lt;/td>
&lt;td>○&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>チームバトル&lt;/td>
&lt;td>○&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>もちよりバトル&lt;/td>
&lt;td>？&lt;/td>
&lt;td>動作未確認。「ゲーム開始準備中」の表示がなければ動作しないと思います&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>シェアバトル&lt;/td>
&lt;td>×&lt;/td>
&lt;td>動作未確認。他のモードとは異なる画面構成のため、動作しない可能性が高い&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CPUバトル&lt;/td>
&lt;td>×&lt;/td>
&lt;td>「マッチング中」の表示がないため&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>マラソン&lt;/td>
&lt;td>×&lt;/td>
&lt;td>時間が右側に表示されているのでこのタイマーの出番はありませんよね？ : )&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="サポート">サポート&lt;/h2>
&lt;p>マージンタイマーの導入に関して質問、うまく動作できないなどは、
&lt;a href="https://twitter.com/sshock_tetris" target="_blank" rel="noopener">
&lt;i class="fab fa-twitter pr-1 fa-fw">&lt;/i>@sshock_tetris&lt;/a>にDM(※要フォロー)やメンションなどで連絡してください。&lt;/p>
&lt;p>マージンタイマー自動開始装置のバグ報告は、&lt;a href="https://github.com/sshock-tetris/autoStartMarginTimer/issues" target="_blank" rel="noopener">Issues&lt;/a>まで。&lt;/p>
&lt;p>ただし、個人的な都合によりサポートできる範囲に限界があります。必ずしも対応できるとは限らないことをご理解ください。&lt;/p></description></item><item><title>配信環境</title><link>https://sshock-tetris.github.io/post/streaming_env/</link><pubDate>Sun, 31 Jan 2021 18:30:15 +0900</pubDate><guid>https://sshock-tetris.github.io/post/streaming_env/</guid><description>&lt;p>配信環境について書こうと思う。&lt;/p>
&lt;h2 id="ハードウェア">ハードウェア&lt;/h2>
&lt;h3 id="マイク-at9440--lct240-pro">マイク: AT9440 → LCT240 Pro&lt;/h3>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="" srcset="
/post/streaming_env/lct240pro_hu0074e8e86c414b86361433b35fea6840_53860_d3f7f4e41fe523bb7078b909f2c1812f.webp 400w,
/post/streaming_env/lct240pro_hu0074e8e86c414b86361433b35fea6840_53860_7c1fd672ca50e17c3d98eb401225f4e7.webp 760w,
/post/streaming_env/lct240pro_hu0074e8e86c414b86361433b35fea6840_53860_1200x1200_fit_q75_h2_lanczos.webp 1200w"
src="https://sshock-tetris.github.io/post/streaming_env/lct240pro_hu0074e8e86c414b86361433b35fea6840_53860_d3f7f4e41fe523bb7078b909f2c1812f.webp"
width="400px"
height="570"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>AT9440は、購入して既に15年は経過している、年季のあるコンデンサーマイク。
ステレオマイクであり、声の収録よりも周囲の音を収録するのに適しているのかもしれない。&lt;/p>
&lt;p>プラグインパワー仕様のマイクで、それに対応していないと音が拾えない。
しかし、ボタン電池を入れることで非対応であっても何とか使えるのがこのマイクの特徴。
ただ、電池を入れても増幅できる音量は限られていて、たいていの場合適正音量にならないのが残念。&lt;/p>
&lt;p>後述の通り接続が不便だったため、9月末にコンデンサーマイク&lt;a href="https://www.minet.jp/brand/lewitt/lct-240pro/" target="_blank" rel="noopener">LCT240 Pro&lt;/a>を購入した &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="マイクアンプ-at-ma2-現在未使用">マイクアンプ: AT-MA2 (現在未使用)&lt;/h3>
&lt;p>マイクのところで書いたとおり、AT9440はプラグインパワー仕様であり、
その仕様に対応したビデオカメラやICレコーダーでなければまともに拾えない。
後述するオーディオインターフェースで音量を上げてもまだ小さい。
ソフトウェア的に音量を上げることもできるが、それをやるとノイズもかなり増える。
この問題を解決するのが、このマイクアンプである。
音量を上げてもノイズレベルを小さく抑えてくれる。
これのおかげで、オーディオインターフェースでもプラグインパワー仕様のマイクが使えるようになる。&lt;/p>
&lt;p>最大のネックはACアダプター必須なこと。9V型乾電池やモバイルバッテリーで代用する人もいるが、
いずれも何らかの改造は必要。&lt;/p>
&lt;p>オーディオインターフェースで使う際にマイクとこれを毎回つなぎ直すのが非常に煩わしくなってきたので、
マイクとスタンドとケーブル1本で済む環境に変えた。
LCT240 Proに変えてからは、このマイクアンプが不要になりよりシンプルになった。&lt;/p>
&lt;h3 id="オーディオインターフェース-motu-m2">オーディオインターフェース: MOTU M2&lt;/h3>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="" srcset="
/post/streaming_env/motum2_hue8f926c98177cae308eff825e490c023_65801_29b1eaf02b1f0e6e55b3129710029b7c.webp 400w,
/post/streaming_env/motum2_hue8f926c98177cae308eff825e490c023_65801_dae2b5e391763d78a0b32fc410fd106f.webp 760w,
/post/streaming_env/motum2_hue8f926c98177cae308eff825e490c023_65801_1200x1200_fit_q75_h2_lanczos.webp 1200w"
src="https://sshock-tetris.github.io/post/streaming_env/motum2_hue8f926c98177cae308eff825e490c023_65801_29b1eaf02b1f0e6e55b3129710029b7c.webp"
width="640px"
height="428"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>音質を重視するのであれば、オーディオインターフェースは必須。
最近のCOVID-19の影響で人気の機材が相次いで売り切れ、MOTU M2も入荷までに数ヶ月かかることもあった。
自分の場合、幸いにもちょうど入荷のタイミングが良く1週間ほどで届いた。
数あるオーディオインターフェースの中でこれを選んだのは、値段以上の音質のよさから。
でもこの製品に限らず、パソコン内蔵のものから変えるだけでも違いがわかるかもしれない。&lt;/p>
&lt;p>配信者であれば&lt;a href="https://jp.yamaha.com/products/proaudio/live_streaming_gaming/ag/ag03mk2/index.html" target="_blank" rel="noopener">AG03MK2&lt;/a>のようにミキサーとオーディオインターフェースを兼ねた機材を買った方が幸せになると思う。
AG03なら音量調整もミュートも手元のボタンで一発でできるし、遅延がないエフェクターもついていて使い勝手がいいと思う。
自分がそれにしなかったのは、単に音質にこだわっただけ。&lt;/p>
&lt;h3 id="キャプチャボード-avermedia-gc573">キャプチャボード: AVerMedia GC573&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="" srcset="
/post/streaming_env/gc573_hu5afdb19aedcd81f867fdc0bb6561a9f3_95289_7321756d4a64160de29cfe37a0181dbc.webp 400w,
/post/streaming_env/gc573_hu5afdb19aedcd81f867fdc0bb6561a9f3_95289_d4fe659906b9b4dfe1d01bee0c43ba4d.webp 760w,
/post/streaming_env/gc573_hu5afdb19aedcd81f867fdc0bb6561a9f3_95289_1200x1200_fit_q75_h2_lanczos.webp 1200w"
src="https://sshock-tetris.github.io/post/streaming_env/gc573_hu5afdb19aedcd81f867fdc0bb6561a9f3_95289_7321756d4a64160de29cfe37a0181dbc.webp"
width="426px"
height="551"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;small>※写真はAVerMediaの&lt;a href="https://www.avermedia.co.jp/media/imagelibrary" target="_blank" rel="noopener">製品ギャラリー&lt;/a>より。&lt;/small>&lt;/p>
&lt;p>4K解像度で60fps、しかもHDRも録画できるキャプチャボード。
4K、60fps、HDR、これらを全て満たすキャプチャボードは少ない。
もちろん、今配信しているNintendo Switchで使うには明らかにオーバースペックだが、
キャプチャボードは頻繁に買い換えるものではなく、壊れなければ何年でも使えるものなので、将来を見越してこれを買った。&lt;/p>
&lt;p>キャプチャボードには外付け型と内蔵型があるが、遅延、帯域、安定性の面では断然内蔵型が良い。
外付け型は、拡張性が殆どないノートPCや、据置型だがコンパクトなPCなど内蔵型が使えないパソコンで使う場合の妥協策である。&lt;/p>
&lt;p>遅延は、テトリスであればキャプチャボードから出てくる映像でもかろうじて問題ないレベル。
FPSや格闘ゲーム、リズムゲームは厳しそう。パススルー機能で別のディスプレイに映すと良い。&lt;/p>
&lt;p>ちなみに、最近では1,000円ぐらいで買える激安キャプチャボードも出てきているが、遅延が大きいためHDMI分配器が必須だったり、
キャプチャ音声がモノラルだったりと激安ならではの欠点があるので、買おうと思っている人は気をつけよう。&lt;/p>
&lt;h3 id="パソコン">パソコン&lt;/h3>
&lt;p>配信には必須だが、詳しいことは省略。内蔵型キャプチャボードがつけられること、
メーカーやBTOではなくパーツを買って組み立てていること、PCゲームが遊べるグラフィックボード
がついていることだけ書いておく。&lt;/p>
&lt;p>普通のノートPCは配信には不向き。
PC用ゲームをせず、ゲーム機の画面をキャプチャボード経由で配信するのであれば、
4コア以上のCPUと最低8GBのメモリは必要と思った方がいい。&lt;/p>
&lt;h3 id="インターネット回線">インターネット回線&lt;/h3>
&lt;p>配信するにあたって特に重要となるのが、上りの速度と安定性。
配信では有線が必須。無線(Wi-Fi)では、最初は動いているように見えても途中で止まるリスクが高く、使えないものと考えるべき。
どうしても無線で配信する場合は、次のことに気をつける。&lt;/p>
&lt;ul>
&lt;li>5GHz帯、かつW52内のチャンネルに接続する&lt;br>
2.4GHz帯は電子レンジやBluetoothと干渉するので通信が切れやすい。
5GHz帯でも、W52以外のチャンネルタイプ(W53やW56)はレーダーを検出すると一時的に通信が切れる。
以上の理由から、5GHz帯W52の範囲内に手動で設定することを推奨する。&lt;br>
ただし、電波の混み具合やレーダーの検出具合、電子レンジの干渉などは実際に試してみないとわからないので、
W52でも安定しない場合は安定するチャンネルを試行錯誤して決めるべき。&lt;/li>
&lt;li>可能な限り他のWi-Fiデバイスの通信をしない&lt;br>
他のデバイスが通信をすると、その間は通信が止まってしまう。
大容量データのダウンロードやビデオ通話を始めた途端に通信が切れることがある。
MU-MIMOに対応した親機と子機を使うと緩和される。&lt;/li>
&lt;/ul>
&lt;p>必要となる速度は配信する解像度や配信サイトによってバラバラなので、各自調べて余裕があるかをよく確認したい。
自分の環境では、幸いにも安定して100Mbps出るため、4K 60fps配信に耐えうる環境のようだ。
ただ、4K 60fps配信はYouTube Liveの仕様上、低遅延にできず30秒の遅延になってしまうので現時点では使えない。&lt;/p>
&lt;h2 id="ソフトウェア">ソフトウェア&lt;/h2>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://sshock-tetris.github.io/images/obs.png" alt="" loading="lazy" data-zoomable width="640px" />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>配信ソフトウェアは、オープンソースソフトウェアである&lt;a href="https://obsproject.com/ja" target="_blank" rel="noopener">OBS (Open Broadcaster Software)&lt;/a>
をありがたく使わせてもらっている。これさえあれば、大体のことは何でもできる。
L字にして文字を入れたり、チャットを表示したり、Discordの通話グループで誰が話しているか表示したり。
OBSは何でもできる代わりに、重たいソフトウェアである。不要なソースは消そう。&lt;/p>
&lt;p>有料の配信ソフトウェアであれば、XSplitが代表（無料版もあるがロゴが入るし機能制限がある）。
OBSにはない複数同時配信ができたりするが、使ったことはないので詳しくは知らない。&lt;/p>
&lt;h3 id="音声ミキシング">音声ミキシング&lt;/h3>
&lt;p>配信において重要となるのが、音のミキシングである。
設定を間違えると必要な音が出なかったり、しゃべっている声が小さすぎて聞き苦しいことになる。&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt=""
src="https://sshock-tetris.github.io/post/streaming_env/live_streaming_diagram.svg"
loading="lazy" data-zoomable width="700px" />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>OBSの音声ソースをキャプチャデバイスの音、マイクの音、その他音声の3種類に分けて管理している。
その他音声には、Discordの会話、棒読みちゃんの音があり、これらはソフトウェアで作った擬似デバイスを使っている。
その擬似デバイスとは、&lt;a href="https://syncroom.yamaha.com/" target="_blank" rel="noopener">YAMAHA SYNCROOM(旧NETDUETTO)&lt;/a>をインストールしたときに入る
&lt;code>VoiceMeeter Input (Yamaha SYNCROOM Driver (WDM))&lt;/code> (以下VoiceMeeter Input)である。
あるいは、同様の機能のある&lt;a href="https://vb-audio.com/Voicemeeter/banana.htm" target="_blank" rel="noopener">VoiceMeeter Banana&lt;/a>でも良い&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。
Discordや棒読みちゃんの音声の出力デバイスをVoiceMeeter Inputに設定する。
VoiceMeeter Inputに設定した音声を配信に乗せるため、OBSではデスクトップ音声としてVoiceMeeter Input
デバイスを設定する。
オーディオインターフェースにループバック(あるいはステレオミキサー)があればそれを使う手もあるが、
あえてVoiceMeeter Inputを使うのは、どの音声を配信に乗せるかを明確にできるからであり、それによって&lt;/p>
&lt;ul>
&lt;li>設定を間違えた結果キャプチャボードの音声が二重になる&lt;/li>
&lt;li>配信中に他の動画配信を見ると意図せずその音が配信に乗ってしまう&lt;/li>
&lt;li>Windowsの効果音が配信に乗ってしまう&lt;/li>
&lt;/ul>
&lt;p>のような放送事故を未然に防げる。この設定を行うことで通話音声を確実かつ綺麗に配信できるようになる。&lt;/p>
&lt;p>音量は、&lt;/p>
&lt;ul>
&lt;li>ゲームなどのBGM: -30db&lt;/li>
&lt;li>声: -3db～-5db&lt;/li>
&lt;/ul>
&lt;p>を目安に調整すると声が聞き取りやすくなる。
声は音割れに十分注意すること。音割れを起こすと不快指数が跳ね上がる。叫び声でも0dbを超えないぐらいなら問題ない。
もし普段の声と叫び声の差が大きい場合は、コンプレッサーを使用すると良い。&lt;/p>
&lt;h3 id="ノイズキャンセリング--nvidia-broadcast">ノイズキャンセリング : NVIDIA Broadcast&lt;/h3>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://sshock-tetris.github.io/images/nvidia_broadcast.png" alt="" loading="lazy" data-zoomable width="426px" />&lt;/div>
&lt;/div>&lt;/figure>
コンデンサーマイクの主な特徴は高音の抜けの良さと遠く離れていても音を拾うことである。
離れた音が拾いやすいということは、雑音も拾いやすいということで、声以外の余計な雑音まで拾ってしまう。
エアコンの送風音、パソコンの冷却ファンの音、キーボードやマウス、ゲームコントローラーの操作音
などを拾ってしまい、良いマイクなのに雑音が多くて使えない、ということになる。&lt;/p>
&lt;p>最近登場した&lt;a href="https://www.nvidia.com/ja-jp/geforce/broadcasting/broadcast-app/" target="_blank" rel="noopener">NVIDIA Broadcast&lt;/a>
が100ms程度の遅延はあるものの、それら雑音を全て綺麗に消してくれるので非常に助かっている。
しかし動作条件は厳しく、NVIDIAのRTXシリーズのグラフィックボードがなければ使えない。
(NVIDIA Broadcastより前にリリースされた&lt;a href="https://www.nvidia.com/ja-jp/geforce/guides/nvidia-rtx-voice-setup-guide/" target="_blank" rel="noopener">RTX Voice&lt;/a>を使えば少しだけ動作条件は緩くなる)
もちろん、雑音が残ってしまうことがあったり、ノイズを消している分声質が変わってしまったりするが、
ノイズがほぼ完全に消えるというのは画期的である。動作条件を満たしている環境であれば、試す価値はあると思う。&lt;/p>
&lt;hr>
&lt;h2 id="個人的な配信における心構え">個人的な配信における心構え&lt;/h2>
&lt;ul>
&lt;li>どれだけ配信環境を整えても、大事なことは中身。決して配信設備でも声でもない。&lt;/li>
&lt;li>視聴者は全員平等。特定人物の肩入れをしすぎないようにする。&lt;/li>
&lt;li>荒らしは視聴者ではない。徹底的に排除することを努める。&lt;/li>
&lt;li>定期的に配信することはチャンネル登録者を増やす意味ではプラスに働くが、精神面ではマイナスに働くことがある。
本業や家庭の事情など自分の置かれている環境が突然変わることがあるのに配信は定期というギャップは、
知らないうちにストレスをためることになる。&lt;/li>
&lt;li>配信することを義務と思った時点で辛くなる。その時は遠慮なく休む。&lt;/li>
&lt;li>配信者が楽しめない配信をしない。態度は声に現れる。それは視聴者を減らす要因である。&lt;/li>
&lt;li>配信は心に余裕があったときだけにとどめたい。&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>ただしゃべるだけが目的ならダイナミックマイクの定番&lt;a href="https://www.shure.com/ja-JP/products/microphones/sm58" target="_blank" rel="noopener">SM58&lt;/a>でも良いし、
もっと安いコンデンサーマイクなら&lt;a href="http://marantzpro.jp/mpm-1000/" target="_blank" rel="noopener">MPM-1000&lt;/a>や
&lt;a href="https://www.audio-technica.co.jp/product/AT2020" target="_blank" rel="noopener">AT2020&lt;/a>などが候補になると思うが、
あまり用途を絞りたくなかったのでこれにした。&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>VoiceMeeter Bananaの方が高機能だが、私の環境ではキャプチャデバイスの遅延が増える謎現象が発生したため断念した。&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>譜面画像からテト譜を起こす</title><link>https://sshock-tetris.github.io/post/tetofugen/</link><pubDate>Thu, 24 Sep 2020 09:11:47 +0900</pubDate><guid>https://sshock-tetris.github.io/post/tetofugen/</guid><description>&lt;p>この記事は、&lt;a href="https://sshock-tetris.github.io/tetofugen.html">譜面画像からテト譜を起こす&lt;/a>の技術資料です。
画像からどのような方法を使ってテト譜を起こすのか興味がある人が対象です。
手法に興味はなく、ただ使ってみたいという人は、&lt;a href="https://sshock-tetris.github.io/tetofugen.html">譜面画像からテト譜を起こす&lt;/a>に移動してください。&lt;/p>
&lt;hr>
&lt;h2 id="きっかけ">きっかけ&lt;/h2>
&lt;p>この配信を見たとき、画像から自動的にテト譜を起こせたら効率よく分析できるんじゃないかと思った。&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/1gm5MSPGlUM" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>需要あるのかな？と適当に調べるとまず&lt;a href="https://crize.blog.jp/archives/16752321.html" target="_blank" rel="noopener">テトリスの画面をテト譜に起こしたかった&lt;/a>
が見つかり、その中で&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">画像からテト譜起こして解析するツール出来ないかな&lt;br>画像処理に長けた人が少ないんだろうか&lt;/p>&amp;mdash; もりおじの⁰よめにおいでよ⁰いますぐに⁰はやくしないと⁰かれてしまうよ (@sakana897) &lt;a href="https://twitter.com/sakana897/status/1055769972054482944?ref_src=twsrc%5Etfw">October 26, 2018&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>というツイートを見つけた。2年前から需要があったことがわかり、作ってみることにした。&lt;/p>
&lt;h2 id="認識手法">認識手法&lt;/h2>
&lt;h3 id="入力画像の前提条件の設定">入力画像の前提条件の設定&lt;/h3>
&lt;p>まず、入力画像はキャプチャボードからのみを前提とした。
カメラからの撮影画像の場合、どう撮影しても譜面がまっすぐにはならず、ゆがみ補正が必須になる。
色補正も必要だったり、場合によってはノイズを消さないといけなかったりと、
前処理がどうしても必要になり、これでは画像認識の本質にたどりつかず本末転倒となる。&lt;/p>
&lt;p>次に、キャプチャボードの画像から縦20ブロック、横10ブロックの譜面画像のみを切り出したものを入力画像とすることとした。
キャプチャボードの画像全体からの場合、譜面を認識させるという前処理が必要で、
この場合も画像認識の本質にたどり着けなくなる恐れがある。&lt;/p>
&lt;p>以上から、入力画像の前提条件は&lt;/p>
&lt;ul>
&lt;li>キャプチャボードからのみ&lt;/li>
&lt;li>縦20ブロック、横10ブロックの画像のみを切り出した譜面画像を入力とする&lt;/li>
&lt;/ul>
&lt;p>とした。&lt;/p>
&lt;h3 id="入力画像から20x10ブロックを特定する">入力画像から20x10ブロックを特定する&lt;/h3>
&lt;p>前提条件を満たした入力画像は、縦横比が2:1となっているはずで、1ブロックが正方形となっているはずである。
1ブロックあたりのピクセル数は、&lt;code>画像の縦ピクセル ÷ 20&lt;/code>、&lt;code>画像の横ピクセル ÷ 10&lt;/code>の大きい方とする。
これは、縦横比がぴったり2:1となっているとは限らず、もし小さい方を採用すると認識するべき位置にずれが生じて別のブロックの色を
誤って読み取ってしまい、認識率が低下するためである。&lt;/p>
&lt;h3 id="ブロックごとに色を調べる">ブロックごとに色を調べる&lt;/h3>
&lt;p>まず、特定したブロックのピクセルのうち中央50%を取り、ピクセルのRGBカラーの値のそれぞれの平均を求める。
これを、ブロックの色とみなす。&lt;/p>
&lt;p>次に、ブロックの色について、テトリミノの色と一致する条件を決定していく。
条件は、RGBの色差関係やRGBの数値の大小関係で決定する。
以下、赤の色値を&lt;code>r&lt;/code>、緑の色値を&lt;code>g&lt;/code>、青の色値を&lt;code>b&lt;/code>とする。&lt;/p>
&lt;h4 id="せり上がりブロック-灰色">せり上がりブロック (灰色)&lt;/h4>
&lt;p>$$ r + g + b &amp;gt; 200, かつ |r - g| &amp;lt; 25, かつ |r - b| &amp;lt; 25, かつ |g - b| &amp;lt; 25 $$&lt;/p>
&lt;h4 id="iミノ-水色">Iミノ (水色)&lt;/h4>
&lt;p>$$ b &amp;gt; 160, かつ r - b &amp;lt; -80, かつ g - b &amp;lt; -10 $$&lt;/p>
&lt;h4 id="sミノ-黄緑色">Sミノ (黄緑色)&lt;/h4>
&lt;p>$$ 35 &amp;lt; r \le 160, かつ g &amp;gt; 120, かつ b &amp;lt; 80, かつ r - g &amp;gt; 30, かつ g - b &amp;gt; 80 $$&lt;/p>
&lt;h4 id="zミノ-赤色">Zミノ (赤色)&lt;/h4>
&lt;p>$$ r &amp;gt; 160, かつ r - g &amp;gt; 20, かつ r - b &amp;gt; 20, かつ |g - b| &amp;lt; 40 $$&lt;/p>
&lt;h4 id="jミノ-青色">Jミノ (青色)&lt;/h4>
&lt;p>$$ g &amp;lt; 110, かつ b &amp;gt; 160, かつ r - b &amp;lt; -80, かつ g - b &amp;lt; -80 $$&lt;/p>
&lt;h4 id="lミノ-橙色">Lミノ (橙色)&lt;/h4>
&lt;p>$$ r &amp;gt; 160, かつ g &amp;gt; 80, かつ b &amp;lt; 60 $$&lt;/p>
&lt;h4 id="oミノ-黄色">Oミノ (黄色)&lt;/h4>
&lt;p>$$ r &amp;gt; 160, かつ g &amp;gt; 160, かつ b &amp;lt; 90, かつ |r - g| &amp;lt; 80 $$&lt;/p>
&lt;h4 id="tミノ-紫色">Tミノ (紫色)&lt;/h4>
&lt;p>$$ g &amp;lt; 120, かつ |r - g| &amp;gt; 70, かつ |g - b| &amp;gt; 70, かつ |r - b| &amp;lt; 100 $$&lt;/p>
&lt;h3 id="テト譜へのリンクを生成する">テト譜へのリンクを生成する&lt;/h3>
&lt;p>テト譜の仕様は、&lt;a href="https://docs.google.com/presentation/d/1V4PNyt41to81phK9u0iXnIkAfp-nV3g3xcl7c5qW-FI/edit#slide=id.g21adbcaeda_0_87" target="_blank" rel="noopener">参考資料2.&lt;/a>を参照。
テト譜のフィールドの大きさは認識する譜面より大きいため、はみ出している部分は全て空白扱いとする。&lt;/p>
&lt;h2 id="今後の課題">今後の課題&lt;/h2>
&lt;p>RGBの色差関係やRGBの数値の大小関係を調べることにより、色を区別する手法を使用した。しかし、この手法には限界がある。&lt;/p>
&lt;p>テトリスにはテトリミノの見た目が大きく変わるテーマを用意していることが多く、
全体的に明るめの色となる場合や、全体的に暗めの色となる場合がある。
両者ではRGBの色差関係やRGBの数値の大小関係が大きく異なることがあるが、それぞれについて別の閾値を定義することはできない。
これは、ブロック単位で色情報を見ている現時点での手法に問題があり、
ブロック全体の明るさの傾向などを新たに調査し適合させる必要がある。そのような方法をいかに実装するかが、今後の課題である。&lt;/p>
&lt;hr>
&lt;h2 id="youtube用のテト譜ジェネレーターがリリースされています">YouTube用のテト譜ジェネレーターがリリースされています&lt;/h2>
&lt;p>&lt;a href="https://twitter.com/X7_SoRA" target="_blank" rel="noopener">SoRA_X7さん&lt;/a>が、Chrome拡張機能&lt;a href="https://chrome.google.com/webstore/detail/kjphnlnbbkgljiaabegchlghlaejpgfb" target="_blank" rel="noopener">YouTube用のテト譜ジェネレーター&lt;/a>を既にリリースしています。
その拡張機能の方が便利で、認識精度も高いので是非ご利用ください。&lt;/p>
&lt;h2 id="参考資料">参考資料&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://crize.blog.jp/archives/16752321.html" target="_blank" rel="noopener">https://crize.blog.jp/archives/16752321.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1V4PNyt41to81phK9u0iXnIkAfp-nV3g3xcl7c5qW-FI/edit#slide=id.g21adbcaeda_0_87" target="_blank" rel="noopener">https://docs.google.com/presentation/d/1V4PNyt41to81phK9u0iXnIkAfp-nV3g3xcl7c5qW-FI/edit#slide=id.g21adbcaeda_0_87&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>あきりん企画 #テトリス運動会 に参加・配信しました</title><link>https://sshock-tetris.github.io/post/2020_akirin_sports_day/</link><pubDate>Mon, 14 Sep 2020 20:30:13 +0900</pubDate><guid>https://sshock-tetris.github.io/post/2020_akirin_sports_day/</guid><description>&lt;p>あきりん企画の &lt;a href="https://twitter.com/Autumn63775693/status/1297842792815718403" target="_blank" rel="noopener">#テトリス運動会&lt;/a> に参加し、様子を配信しました。&lt;/p>
&lt;p>&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">&lt;a href="https://twitter.com/hashtag/%E3%83%86%E3%83%88%E3%83%AA%E3%82%B9%E9%81%8B%E5%8B%95%E4%BC%9A?src=hash&amp;amp;ref_src=twsrc%5Etfw">#テトリス運動会&lt;/a>&lt;br>運動会企画！！&lt;br>9/12(土)22:00～&lt;br>4つの組に分かれて勝負！参加受付はこのリプ欄に参加するときの名前を教えてください～！&lt;br>詳細は以下のとおりです！！分からないことがあったらなんでも教えてください～ &lt;a href="https://t.co/Vy5KBCYcGN">pic.twitter.com/Vy5KBCYcGN&lt;/a>&lt;/p>&amp;mdash; あき (@Autumn63775693) &lt;a href="https://twitter.com/Autumn63775693/status/1297842792815718403?ref_src=twsrc%5Etfw">August 24, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/nHMCr2Br2PA" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;hr>
&lt;p>結果&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">&lt;a href="https://twitter.com/hashtag/%E3%83%86%E3%83%88%E3%83%AA%E3%82%B9%E9%81%8B%E5%8B%95%E4%BC%9A?src=hash&amp;amp;ref_src=twsrc%5Etfw">#テトリス運動会&lt;/a>&lt;br>結果発表！！&lt;br>優勝は緑チームです！！おめでとう！！&lt;br>他のチームもみんなめちゃ強かったです！ありがとうございました～！！ &lt;a href="https://t.co/uiIBqqOXAD">pic.twitter.com/uiIBqqOXAD&lt;/a>&lt;/p>&amp;mdash; あき (@Autumn63775693) &lt;a href="https://twitter.com/Autumn63775693/status/1304824699428331526?ref_src=twsrc%5Etfw">September 12, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;hr>
&lt;p>翌日、こんな感じでつぶやくと&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">&lt;a href="https://twitter.com/hashtag/%E3%83%86%E3%83%88%E3%83%AA%E3%82%B9%E9%81%8B%E5%8B%95%E4%BC%9A?src=hash&amp;amp;ref_src=twsrc%5Etfw">#テトリス運動会&lt;/a> の反省会配信はない感じかな？(ボソ)&lt;/p>&amp;mdash; shellshock🐚😱 (@sshock_tetris) &lt;a href="https://twitter.com/sshock_tetris/status/1304963392134721539?ref_src=twsrc%5Etfw">September 13, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>&lt;a href="https://www.youtube.com/channel/UCoI4Gr6g5SLmAi60AqooDEA" target="_blank" rel="noopener">夏影ソウナ&lt;/a>さんが反省会(?)配信をしてくださり、
最初から途中までお邪魔しました。&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/Ea-xWk6vfOw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;hr>
&lt;p>ところが、この反省会配信で肝心な反省会のことがほとんど話せないまま時間が来てしまったため、
このページに感想と反省内容を箇条書きすることにしました。&lt;/p>
&lt;h2 id="試合前の心境">試合前の心境&lt;/h2>
&lt;ul>
&lt;li>試合前の練習はできなかった
&lt;ul>
&lt;li>前日にシノンさんのスナイプをしたり、当日に野良チームに2回入っただけ&lt;/li>
&lt;li>ただ、直前に練習することに意味はほとんどないので、時間があっても5試合もやらなかったと思う&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自分は何ができるかを考えると、中堅戦以外は何ももできないと思った&lt;/li>
&lt;li>バッジはどうせ取れないので特に考えてなかった&lt;/li>
&lt;li>試合結果への貢献度は0と思っていた&lt;/li>
&lt;li>試合結果ではなく、縛りルールを楽しむ感じでいきたいと思った&lt;/li>
&lt;/ul>
&lt;h2 id="プレイ内容">プレイ内容&lt;/h2>
&lt;ul>
&lt;li>最後の試合だけは悪くなかった(タゲゲーしてただけ)&lt;/li>
&lt;li>貢献度は0だった(想定通り)&lt;/li>
&lt;li>回転禁止縛りで回転してしまった(配信の通り速やかに自滅しました)&lt;/li>
&lt;li>大将戦で色を間違えたまま入ってしまった&lt;br>
　個人としては影響なかったものの、間違えたくなかった&lt;/li>
&lt;/ul>
&lt;h2 id="プログラム個別順位と感想">プログラム個別順位と感想&lt;/h2>
&lt;ul>
&lt;li>①41位。あまり印象なし。ただ、黄が1位を取ったのは幸先がよかった。&lt;/li>
&lt;li>②70位。様々な耐え方(5列REN、火力積みなど)が見所でした。&lt;/li>
&lt;li>③81位。96人の昇天王は初で、とても楽しみだった。特にあきさんの速さが際立っていた印象
&lt;ul>
&lt;li>この辺から緑チームが得点を稼いでいき差を広げていった印象がある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>④90位。回転禁止なのに回転してしまい、速やかに自滅。回転できないラインを送ってバッジを取っているのがすごかった&lt;/li>
&lt;li>⑤68位。同じタイミングで一気に落ちていく様子は処理落ちを含めて圧巻。&lt;/li>
&lt;li>⑥96位。人間最下位を記録。実況に終始していた。&lt;/li>
&lt;li>⑦38位。黄1人対緑4人で、しかも黄はバッジ0%という圧倒的に不利な状況から1対1に持って行ったのはすごく興奮した。
　これがビームかと思った。&lt;/li>
&lt;li>⑧50位。火力の飛び方は大将がいなくても全く変わることなく、他の通常ルールの試合と変わらない感じだった。&lt;/li>
&lt;li>⑨開始即昇天王で観戦。しかし、色替えを忘れて緑で入ってしまい(無影響とはいえ)申し訳なかった。&lt;/li>
&lt;li>⑩33位。タゲゲーをやりまくった感じだった。それでも誰もKOできなかったのはさすがだなと思った。&lt;/li>
&lt;/ul>
&lt;h2 id="放送委員として">放送委員として&lt;/h2>
&lt;ul>
&lt;li>涼蒼さんと掛け合いができたのは最高に楽しかった&lt;/li>
&lt;li>もうちょっと自分の配信のことを宣伝しても良かった
&lt;ul>
&lt;li>自分が放送委員であることをあまりアピールしなかった&lt;/li>
&lt;li>Twitterでは配信が始まったことしかツイートしてなかった&lt;/li>
&lt;li>そのツイートに #テトリス運動会 を付け忘れてた&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>サムネ手抜き過ぎ
&lt;ul>
&lt;li>時間が取れなかったのが主因だが、それは言い訳に過ぎない&lt;/li>
&lt;li>配信者の腕の見せ所なので、次回からは少しは改善したい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>通話相手(涼蒼さん)に頼りっきりになっていた感があった
&lt;ul>
&lt;li>自分だけで面白い配信ができるよう頑張りたい&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>マージンタイマーをほとんどつけ忘れていた (中村天飛さんに感謝！)
&lt;ul>
&lt;li>話ながらだとよく忘れる理由がわかった気がする&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>放置王の配点ルールを理解してなかった
&lt;ul>
&lt;li>得点ルールを勝手にチーム順位と思っていて、意味がないのにCPUを応援していたのは非常に恥ずかしかった
(でも、チーム順位と書いてあったはずなんだけどな・・・)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配信に精一杯で余裕がなく、ほかの配信者さんにリアルタイムで挨拶できなかった&lt;/li>
&lt;li>通話用Discordサーバーを開放して入ってきた人がもう１人いたが、その人へのフォローが全くできなかった&lt;/li>
&lt;/ul>
&lt;h2 id="内心">内心&lt;/h2>
&lt;ul>
&lt;li>配信用テロップを作るのが地味に面倒で心が折れそうだった
&lt;ul>
&lt;li>優先順位間違ってない？感 (&lt;code>サムネ &amp;gt; テロップ&lt;/code> じゃないの？)&lt;/li>
&lt;li>こういったテロップやサムネをきちんと用意できる(私以外の)配信者をあらためて尊敬した&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配信前日～配信3時間前の時点では配信モチベーションが0だった
&lt;ul>
&lt;li>大勢の配信者がいる中で、自分の配信に何の特徴も見いだせないのではと思った
(以前に配信したpgさん感謝祭、シノン祭の時と同じく)&lt;/li>
&lt;li>配信中の待ち時間の間、観戦できるとはいえ自力で場をつなげられるか非常に不安だった
(自分の配信者としての資質のなさに不安しかなかった)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="そのほか">そのほか&lt;/h2>
&lt;ul>
&lt;li>試合中の奇跡が思いのほかあった。印象に残ったのは以下。
&lt;ul>
&lt;li>90人以上での昇天王や放置王は初めて！&lt;/li>
&lt;li>放置王の開始時間がふさふさタイム(23:23)、なおかつおにくさんが23位をとったこと&lt;/li>
&lt;li>もみじさん1人だけで緑組4人を相手にバッジ0%という超不利な状況で3人をKOしたこと&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>プログラム⑧～⑩の得点がずっとブラックボックスだったのは少し気がかり
&lt;ul>
&lt;li>点差がかなり離れていて、どういう得点にするのかがずっとわからなかったのでもやもや感があった&lt;/li>
&lt;li>逆転の可能性を上げるために得点を可変にしたと思うが、得点を教えて欲しかった&lt;/li>
&lt;li>とはいえ・・・&lt;br>
体育委員(集計係)の立場としては集計と計算の時間に余裕が生まれること、
参加者全員の立場としてはどの組が優勝するのかがすぐにわからないことを考えると、これでよかったかなとも思ったりする&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>パスワードマッチでフライングする人が誰もいなかったのはとても良かった&lt;/li>
&lt;li>ルール違反では？の指摘が少なからず見つかったのは残念
&lt;ul>
&lt;li>REN禁止で端開けのRENを組んでいる人がいる、放置王で目に見えるぐらい接地が遅れている・・・など&lt;/li>
&lt;li>ただ、90人超も参加しているのにあれ以上荒れることはなかったし、目立ったルール違反がなくとても平和で安心した&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>全体の時間が長く深夜までかかり、離脱者が少なからずいた
&lt;ul>
&lt;li>時間を1時間早くする、あるいは前編/後編に分けてもよかったかもしれない(現実の運動会で午前と午後で分かれていたように)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>いつも素敵な企画をありがとうございます。今回もとても楽しかったです。
結果は緑組の優勝ということで、黄組は惜しくも2位で自分がそこまで貢献できたわけでは決してありませんが、
観戦しているだけでも興奮していました。&lt;/p>
&lt;p>配信内で通話だけでなく場までつないだ涼蒼さん、配信に来てくださった皆様、そして参加者の皆様、ありがとうございました。
来年の運動会企画も検討されているそうで、次回が待ち遠しいです。&lt;/p>
&lt;p>では、これにて。&lt;/p></description></item></channel></rss>